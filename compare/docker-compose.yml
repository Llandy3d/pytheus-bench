version: "3.8"

services:
    pytheus-singleprocess:
        container_name: pytheus-singleprocess
        build:
            context: ./
            dockerfile: Dockerfile
            ssh:
                - default
        command: "gunicorn -w 1 --bind 0.0.0.0:5000 server:app"
        environment:
            WORKERS_COUNT: 1
        ports:
            - "5000:5000"

    pytheus-singleprocess-rust:
        container_name: pytheus-singleprocess-rust
        build:
            context: ./
            dockerfile: Dockerfile
            ssh:
                - default
        command: "gunicorn -w 1 --bind 0.0.0.0:5004 server:app"
        environment:
            PYTHEUS_SINGLEPROCESS_RUST: 1
            WORKERS_COUNT: 1
        ports:
            - "5004:5004"

    pytheus-multiprocess:
        container_name: pytheus-multiprocess
        build:
            context: ./
            dockerfile: Dockerfile
            ssh:
                - default
        command: "gunicorn -w 4 --bind 0.0.0.0:5001 server:app"
        environment:
            PYTHEUS_MULTIPROCESS_TEST: 1
            WORKERS_COUNT: 4
        ports:
            - "5001:5001"
        depends_on:
            - redis

    old-singleprocess:
        container_name: old-singleprocess
        build:
            context: ./
            dockerfile: Dockerfile
            ssh:
                - default
        command: "gunicorn -w 1 --bind 0.0.0.0:5002 server_old:app"
        environment:
            PROMETHEUS_DISABLE_CREATED_SERIES: True
        ports:
            - "5002:5002"

    old-multiprocess:
        container_name: old-multiprocess
        build:
            context: ./
            dockerfile: Dockerfile
            ssh:
                - default
        # gunicorn -w 4 --bind 0.0.0.0:5003 server_old:app
        command: "/app/clean_old_multiprocess_data_and_start_gunicorn.sh"
        environment:
            PROMETHEUS_DISABLE_CREATED_SERIES: True
            PROMETHEUS_MULTIPROC_DIR: '/old_multiprocess_data'
        volumes:
            - old_multiprocess_data:/old_multiprocess_data
        ports:
            - "5003:5003"

    redis:
        image: redis
        container_name: redis
        ports:
            - "6379:6379"

    prometheus:
        image: prom/prometheus:latest
        user: root
        container_name: prometheus
        restart: unless-stopped
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.enable-lifecycle'  # reload config without restart

    # grafana:
    #     image: grafana/grafana:latest
    #     container_name: grafana
    #     ports:
    #         - "3000:3000"
    #     volumes:
    #         - ./datasources:/etc/grafana/provisioning/datasources/

volumes:
    prometheus_data: {}
    old_multiprocess_data: {}
